{"version":3,"file":"index.esm.js","sources":["../../../dist-es5/stitch/src/definitions.js","../../../dist-es5/stitch/src/typeFromAST.js","../../../dist-es5/stitch/src/mergeCandidates.js","../../../dist-es5/stitch/src/typeCandidates.js","../../../dist-es5/stitch/src/createMergedTypeResolver.js","../../../dist-es5/stitch/src/stitchingInfo.js","../../../dist-es5/stitch/src/isolateComputedFields.js","../../../dist-es5/stitch/src/subschemaConfigTransforms/computedDirectiveTransformer.js","../../../dist-es5/stitch/src/subschemaConfigTransforms/index.js","../../../dist-es5/stitch/src/stitchSchemas.js","../../../dist-es5/stitch/src/selectionSetArgs.js"],"sourcesContent":["import { __assign } from \"tslib\";\nimport { Kind } from 'graphql';\nexport function extractTypeDefinitions(ast) {\n    var typeDefs = ast.definitions.filter(function (def) {\n        return def.kind === Kind.OBJECT_TYPE_DEFINITION ||\n            def.kind === Kind.INTERFACE_TYPE_DEFINITION ||\n            def.kind === Kind.INPUT_OBJECT_TYPE_DEFINITION ||\n            def.kind === Kind.UNION_TYPE_DEFINITION ||\n            def.kind === Kind.ENUM_TYPE_DEFINITION ||\n            def.kind === Kind.SCALAR_TYPE_DEFINITION;\n    });\n    return __assign(__assign({}, ast), { definitions: typeDefs });\n}\nexport function extractDirectiveDefinitions(ast) {\n    var directiveDefs = ast.definitions.filter(function (def) { return def.kind === Kind.DIRECTIVE_DEFINITION; });\n    return __assign(__assign({}, ast), { definitions: directiveDefs });\n}\nexport function extractSchemaDefinition(ast) {\n    var schemaDefs = ast.definitions.filter(function (def) { return def.kind === Kind.SCHEMA_DEFINITION; });\n    return schemaDefs.length ? schemaDefs[schemaDefs.length - 1] : null;\n}\nexport function extractSchemaExtensions(ast) {\n    var schemaExtensions = ast.definitions.filter(function (def) { return def.kind === Kind.SCHEMA_EXTENSION; });\n    return schemaExtensions;\n}\nexport function extractTypeExtensionDefinitions(ast) {\n    var extensionDefs = ast.definitions.filter(function (def) {\n        return def.kind === Kind.OBJECT_TYPE_EXTENSION ||\n            def.kind === Kind.INTERFACE_TYPE_EXTENSION ||\n            def.kind === Kind.INPUT_OBJECT_TYPE_EXTENSION ||\n            def.kind === Kind.UNION_TYPE_EXTENSION ||\n            def.kind === Kind.ENUM_TYPE_EXTENSION ||\n            def.kind === Kind.SCALAR_TYPE_EXTENSION;\n    });\n    return __assign(__assign({}, ast), { definitions: extensionDefs });\n}\n//# sourceMappingURL=definitions.js.map","import { __assign } from \"tslib\";\nimport { GraphQLEnumType, GraphQLInputObjectType, GraphQLInterfaceType, GraphQLObjectType, GraphQLScalarType, GraphQLUnionType, Kind, GraphQLDirective, DirectiveLocation, TokenKind, valueFromASTUntyped, getDirectiveValues, GraphQLDeprecatedDirective, } from 'graphql';\nimport { createStub, createNamedStub } from '@graphql-tools/utils';\nvar backcompatOptions = { commentDescriptions: true };\nexport default function typeFromAST(node) {\n    switch (node.kind) {\n        case Kind.OBJECT_TYPE_DEFINITION:\n            return makeObjectType(node);\n        case Kind.INTERFACE_TYPE_DEFINITION:\n            return makeInterfaceType(node);\n        case Kind.ENUM_TYPE_DEFINITION:\n            return makeEnumType(node);\n        case Kind.UNION_TYPE_DEFINITION:\n            return makeUnionType(node);\n        case Kind.SCALAR_TYPE_DEFINITION:\n            return makeScalarType(node);\n        case Kind.INPUT_OBJECT_TYPE_DEFINITION:\n            return makeInputObjectType(node);\n        case Kind.DIRECTIVE_DEFINITION:\n            return makeDirective(node);\n        default:\n            return null;\n    }\n}\nfunction makeObjectType(node) {\n    var config = {\n        name: node.name.value,\n        description: getDescription(node, backcompatOptions),\n        interfaces: function () { return node.interfaces.map(function (iface) { return createNamedStub(iface.name.value, 'interface'); }); },\n        fields: function () { return makeFields(node.fields); },\n        astNode: node,\n    };\n    return new GraphQLObjectType(config);\n}\nfunction makeInterfaceType(node) {\n    var _a;\n    var config = {\n        name: node.name.value,\n        description: getDescription(node, backcompatOptions),\n        interfaces: (_a = node.interfaces) === null || _a === void 0 ? void 0 : _a.map(function (iface) {\n            return createNamedStub(iface.name.value, 'interface');\n        }),\n        fields: function () { return makeFields(node.fields); },\n        astNode: node,\n    };\n    return new GraphQLInterfaceType(config);\n}\nfunction makeEnumType(node) {\n    var values = node.values.reduce(function (prev, value) {\n        var _a;\n        return (__assign(__assign({}, prev), (_a = {}, _a[value.name.value] = {\n            description: getDescription(value, backcompatOptions),\n            deprecationReason: getDeprecationReason(value),\n            astNode: value,\n        }, _a)));\n    }, {});\n    return new GraphQLEnumType({\n        name: node.name.value,\n        description: getDescription(node, backcompatOptions),\n        values: values,\n        astNode: node,\n    });\n}\nfunction makeUnionType(node) {\n    return new GraphQLUnionType({\n        name: node.name.value,\n        description: getDescription(node, backcompatOptions),\n        types: function () { return node.types.map(function (type) { return createNamedStub(type.name.value, 'object'); }); },\n        astNode: node,\n    });\n}\nfunction makeScalarType(node) {\n    return new GraphQLScalarType({\n        name: node.name.value,\n        description: getDescription(node, backcompatOptions),\n        astNode: node,\n        // TODO: serialize default property setting can be dropped once\n        // upstream graphql-js TypeScript typings are updated, likely in v16\n        serialize: function (value) { return value; },\n    });\n}\nfunction makeInputObjectType(node) {\n    return new GraphQLInputObjectType({\n        name: node.name.value,\n        description: getDescription(node, backcompatOptions),\n        fields: function () { return makeValues(node.fields); },\n        astNode: node,\n    });\n}\nfunction makeFields(nodes) {\n    return nodes.reduce(function (prev, node) {\n        var _a;\n        return (__assign(__assign({}, prev), (_a = {}, _a[node.name.value] = {\n            type: createStub(node.type, 'output'),\n            description: getDescription(node, backcompatOptions),\n            args: makeValues(node.arguments),\n            deprecationReason: getDeprecationReason(node),\n            astNode: node,\n        }, _a)));\n    }, {});\n}\nfunction makeValues(nodes) {\n    return nodes.reduce(function (prev, node) {\n        var _a;\n        return (__assign(__assign({}, prev), (_a = {}, _a[node.name.value] = {\n            type: createStub(node.type, 'input'),\n            defaultValue: node.defaultValue !== undefined ? valueFromASTUntyped(node.defaultValue) : undefined,\n            description: getDescription(node, backcompatOptions),\n            astNode: node,\n        }, _a)));\n    }, {});\n}\nfunction makeDirective(node) {\n    var locations = [];\n    node.locations.forEach(function (location) {\n        if (location.value in DirectiveLocation) {\n            locations.push(location.value);\n        }\n    });\n    return new GraphQLDirective({\n        name: node.name.value,\n        description: node.description != null ? node.description.value : null,\n        locations: locations,\n        isRepeatable: node.repeatable,\n        args: makeValues(node.arguments),\n        astNode: node,\n    });\n}\n// graphql < v13 does not export getDescription\nfunction getDescription(node, options) {\n    if (node.description != null) {\n        return node.description.value;\n    }\n    if (options.commentDescriptions) {\n        var rawValue = getLeadingCommentBlock(node);\n        if (rawValue !== undefined) {\n            return dedentBlockStringValue(\"\\n\" + rawValue);\n        }\n    }\n}\nfunction getLeadingCommentBlock(node) {\n    var loc = node.loc;\n    if (!loc) {\n        return;\n    }\n    var comments = [];\n    var token = loc.startToken.prev;\n    while (token != null &&\n        token.kind === TokenKind.COMMENT &&\n        token.next != null &&\n        token.prev != null &&\n        token.line + 1 === token.next.line &&\n        token.line !== token.prev.line) {\n        var value = String(token.value);\n        comments.push(value);\n        token = token.prev;\n    }\n    return comments.length > 0 ? comments.reverse().join('\\n') : undefined;\n}\nfunction dedentBlockStringValue(rawString) {\n    // Expand a block string's raw value into independent lines.\n    var lines = rawString.split(/\\r\\n|[\\n\\r]/g);\n    // Remove common indentation from all lines but first.\n    var commonIndent = getBlockStringIndentation(lines);\n    if (commonIndent !== 0) {\n        for (var i = 1; i < lines.length; i++) {\n            lines[i] = lines[i].slice(commonIndent);\n        }\n    }\n    // Remove leading and trailing blank lines.\n    while (lines.length > 0 && isBlank(lines[0])) {\n        lines.shift();\n    }\n    while (lines.length > 0 && isBlank(lines[lines.length - 1])) {\n        lines.pop();\n    }\n    // Return a string of the lines joined with U+000A.\n    return lines.join('\\n');\n}\n/**\n * @internal\n */\nexport function getBlockStringIndentation(lines) {\n    var commonIndent = null;\n    for (var i = 1; i < lines.length; i++) {\n        var line = lines[i];\n        var indent = leadingWhitespace(line);\n        if (indent === line.length) {\n            continue; // skip empty lines\n        }\n        if (commonIndent === null || indent < commonIndent) {\n            commonIndent = indent;\n            if (commonIndent === 0) {\n                break;\n            }\n        }\n    }\n    return commonIndent === null ? 0 : commonIndent;\n}\nfunction leadingWhitespace(str) {\n    var i = 0;\n    while (i < str.length && (str[i] === ' ' || str[i] === '\\t')) {\n        i++;\n    }\n    return i;\n}\nfunction isBlank(str) {\n    return leadingWhitespace(str) === str.length;\n}\nfunction getDeprecationReason(node) {\n    var deprecated = getDirectiveValues(GraphQLDeprecatedDirective, node);\n    return deprecated === null || deprecated === void 0 ? void 0 : deprecated.reason;\n}\n//# sourceMappingURL=typeFromAST.js.map","import { __assign, __read, __spread } from \"tslib\";\nimport { GraphQLObjectType, GraphQLInterfaceType, GraphQLUnionType, GraphQLEnumType, isScalarType, isObjectType, isInterfaceType, isUnionType, isEnumType, isInputObjectType, GraphQLInputObjectType, GraphQLScalarType, } from 'graphql';\nimport { mergeType, mergeInputType, mergeInterface, mergeUnion, mergeEnum } from '@graphql-tools/merge';\nimport { fieldToFieldConfig, inputFieldToFieldConfig } from '@graphql-tools/utils';\nexport function mergeCandidates(typeName, candidates, typeMergingOptions) {\n    var initialCandidateType = candidates[0].type;\n    if (candidates.some(function (candidate) { return candidate.type.constructor !== initialCandidateType.constructor; })) {\n        throw new Error(\"Cannot merge different type categories into common type \" + typeName + \".\");\n    }\n    if (isObjectType(initialCandidateType)) {\n        return mergeObjectTypeCandidates(typeName, candidates, typeMergingOptions);\n    }\n    else if (isInputObjectType(initialCandidateType)) {\n        return mergeInputObjectTypeCandidates(typeName, candidates, typeMergingOptions);\n    }\n    else if (isInterfaceType(initialCandidateType)) {\n        return mergeInterfaceTypeCandidates(typeName, candidates, typeMergingOptions);\n    }\n    else if (isUnionType(initialCandidateType)) {\n        return mergeUnionTypeCandidates(typeName, candidates, typeMergingOptions);\n    }\n    else if (isEnumType(initialCandidateType)) {\n        return mergeEnumTypeCandidates(typeName, candidates, typeMergingOptions);\n    }\n    else if (isScalarType(initialCandidateType)) {\n        return mergeScalarTypeCandidates(typeName, candidates, typeMergingOptions);\n    }\n    else {\n        // not reachable.\n        throw new Error(\"Type \" + typeName + \" has unknown GraphQL type.\");\n    }\n}\nfunction mergeObjectTypeCandidates(typeName, candidates, typeMergingOptions) {\n    var description = mergeTypeDescriptions(candidates, typeMergingOptions);\n    var fields = fieldConfigMapFromTypeCandidates(candidates, typeMergingOptions);\n    var typeConfigs = candidates.map(function (candidate) { return candidate.type.toConfig(); });\n    var interfaceMap = typeConfigs\n        .map(function (typeConfig) { return typeConfig.interfaces; })\n        .reduce(function (acc, interfaces) {\n        if (interfaces != null) {\n            interfaces.forEach(function (iface) {\n                acc[iface.name] = iface;\n            });\n        }\n        return acc;\n    }, Object.create(null));\n    var interfaces = Object.keys(interfaceMap).map(function (interfaceName) { return interfaceMap[interfaceName]; });\n    var astNodes = pluck('astNode', candidates);\n    var astNode = astNodes\n        .slice(1)\n        .reduce(function (acc, astNode) { return mergeType(astNode, acc); }, astNodes[0]);\n    var extensionASTNodes = [].concat(pluck('extensionASTNodes', candidates));\n    var extensions = Object.assign.apply(Object, __spread([{}], pluck('extensions', candidates)));\n    var typeConfig = {\n        name: typeName,\n        description: description,\n        fields: fields,\n        interfaces: interfaces,\n        astNode: astNode,\n        extensionASTNodes: extensionASTNodes,\n        extensions: extensions,\n    };\n    return new GraphQLObjectType(typeConfig);\n}\nfunction mergeInputObjectTypeCandidates(typeName, candidates, typeMergingOptions) {\n    var description = mergeTypeDescriptions(candidates, typeMergingOptions);\n    var fields = inputFieldConfigMapFromTypeCandidates(candidates, typeMergingOptions);\n    var astNodes = pluck('astNode', candidates);\n    var astNode = astNodes\n        .slice(1)\n        .reduce(function (acc, astNode) { return mergeInputType(astNode, acc); }, astNodes[0]);\n    var extensionASTNodes = [].concat(pluck('extensionASTNodes', candidates));\n    var extensions = Object.assign.apply(Object, __spread([{}], pluck('extensions', candidates)));\n    var typeConfig = {\n        name: typeName,\n        description: description,\n        fields: fields,\n        astNode: astNode,\n        extensionASTNodes: extensionASTNodes,\n        extensions: extensions,\n    };\n    return new GraphQLInputObjectType(typeConfig);\n}\nfunction pluck(typeProperty, candidates) {\n    return candidates.map(function (candidate) { return candidate.type[typeProperty]; }).filter(function (value) { return value != null; });\n}\nfunction mergeInterfaceTypeCandidates(typeName, candidates, typeMergingOptions) {\n    var description = mergeTypeDescriptions(candidates, typeMergingOptions);\n    var fields = fieldConfigMapFromTypeCandidates(candidates, typeMergingOptions);\n    var typeConfigs = candidates.map(function (candidate) { return candidate.type.toConfig(); });\n    var interfaceMap = typeConfigs\n        .map(function (typeConfig) { return typeConfig.interfaces; })\n        .reduce(function (acc, interfaces) {\n        if (interfaces != null) {\n            interfaces.forEach(function (iface) {\n                acc[iface.name] = iface;\n            });\n        }\n        return acc;\n    }, Object.create(null));\n    var interfaces = Object.keys(interfaceMap).map(function (interfaceName) { return interfaceMap[interfaceName]; });\n    var astNodes = pluck('astNode', candidates);\n    var astNode = astNodes\n        .slice(1)\n        .reduce(function (acc, astNode) { return mergeInterface(astNode, acc, {}); }, astNodes[0]);\n    var extensionASTNodes = [].concat(pluck('extensionASTNodes', candidates));\n    var extensions = Object.assign.apply(Object, __spread([{}], pluck('extensions', candidates)));\n    var typeConfig = {\n        name: typeName,\n        description: description,\n        fields: fields,\n        interfaces: interfaces,\n        astNode: astNode,\n        extensionASTNodes: extensionASTNodes,\n        extensions: extensions,\n    };\n    return new GraphQLInterfaceType(typeConfig);\n}\nfunction mergeUnionTypeCandidates(typeName, candidates, typeMergingOptions) {\n    var description = mergeTypeDescriptions(candidates, typeMergingOptions);\n    var typeConfigs = candidates.map(function (candidate) { return candidate.type.toConfig(); });\n    var typeMap = typeConfigs.reduce(function (acc, typeConfig) {\n        typeConfig.types.forEach(function (type) {\n            acc[type.name] = type;\n        });\n        return acc;\n    }, Object.create(null));\n    var types = Object.keys(typeMap).map(function (typeName) { return typeMap[typeName]; });\n    var astNodes = pluck('astNode', candidates);\n    var astNode = astNodes\n        .slice(1)\n        .reduce(function (acc, astNode) { return mergeUnion(astNode, acc); }, astNodes[0]);\n    var extensionASTNodes = [].concat(pluck('extensionASTNodes', candidates));\n    var extensions = Object.assign.apply(Object, __spread([{}], pluck('extensions', candidates)));\n    var typeConfig = {\n        name: typeName,\n        description: description,\n        types: types,\n        astNode: astNode,\n        extensionASTNodes: extensionASTNodes,\n        extensions: extensions,\n    };\n    return new GraphQLUnionType(typeConfig);\n}\nfunction mergeEnumTypeCandidates(typeName, candidates, typeMergingOptions) {\n    var description = mergeTypeDescriptions(candidates, typeMergingOptions);\n    var typeConfigs = candidates.map(function (candidate) { return candidate.type.toConfig(); });\n    var values = typeConfigs.reduce(function (acc, typeConfig) { return (__assign(__assign({}, acc), typeConfig.values)); }, {});\n    var astNodes = pluck('astNode', candidates);\n    var astNode = astNodes\n        .slice(1)\n        .reduce(function (acc, astNode) { return mergeEnum(astNode, acc); }, astNodes[0]);\n    var extensionASTNodes = [].concat(pluck('extensionASTNodes', candidates));\n    var extensions = Object.assign.apply(Object, __spread([{}], pluck('extensions', candidates)));\n    var typeConfig = {\n        name: typeName,\n        description: description,\n        values: values,\n        astNode: astNode,\n        extensionASTNodes: extensionASTNodes,\n        extensions: extensions,\n    };\n    return new GraphQLEnumType(typeConfig);\n}\nfunction mergeScalarTypeCandidates(typeName, candidates, typeMergingOptions) {\n    var description = mergeTypeDescriptions(candidates, typeMergingOptions);\n    var serializeFns = pluck('serialize', candidates);\n    var serialize = serializeFns[serializeFns.length - 1];\n    var parseValueFns = pluck('parseValue', candidates);\n    var parseValue = parseValueFns[parseValueFns.length - 1];\n    var parseLiteralFns = pluck('parseLiteral', candidates);\n    var parseLiteral = parseLiteralFns[parseLiteralFns.length - 1];\n    var astNodes = pluck('astNode', candidates);\n    var astNode = astNodes\n        .slice(1)\n        .reduce(function (acc, astNode) { return mergeScalarTypeDefinitionNodes(acc, astNode); }, astNodes[0]);\n    var extensionASTNodes = [].concat(pluck('extensionASTNodes', candidates));\n    var extensions = Object.assign.apply(Object, __spread([{}], pluck('extensions', candidates)));\n    var typeConfig = {\n        name: typeName,\n        description: description,\n        serialize: serialize,\n        parseValue: parseValue,\n        parseLiteral: parseLiteral,\n        astNode: astNode,\n        extensionASTNodes: extensionASTNodes,\n        extensions: extensions,\n    };\n    return new GraphQLScalarType(typeConfig);\n}\nfunction mergeTypeDescriptions(candidates, typeMergingOptions) {\n    var _a;\n    var typeDescriptionsMerger = (_a = typeMergingOptions === null || typeMergingOptions === void 0 ? void 0 : typeMergingOptions.typeDescriptionsMerger) !== null && _a !== void 0 ? _a : defaultTypeDescriptionMerger;\n    return typeDescriptionsMerger(candidates);\n}\nfunction defaultTypeDescriptionMerger(candidates) {\n    return candidates[candidates.length - 1].type.description;\n}\nfunction fieldConfigMapFromTypeCandidates(candidates, typeMergingOptions) {\n    var fieldConfigCandidatesMap = Object.create(null);\n    candidates.forEach(function (candidate) {\n        var fieldMap = candidate.type.getFields();\n        Object.keys(fieldMap).forEach(function (fieldName) {\n            var fieldConfigCandidate = {\n                fieldConfig: fieldToFieldConfig(fieldMap[fieldName]),\n                fieldName: fieldName,\n                type: candidate.type,\n                subschema: candidate.subschema,\n                transformedSubschema: candidate.transformedSubschema,\n            };\n            if (fieldName in fieldConfigCandidatesMap) {\n                fieldConfigCandidatesMap[fieldName].push(fieldConfigCandidate);\n            }\n            else {\n                fieldConfigCandidatesMap[fieldName] = [fieldConfigCandidate];\n            }\n        });\n    });\n    var fieldConfigMap = Object.create(null);\n    Object.keys(fieldConfigCandidatesMap).forEach(function (fieldName) {\n        fieldConfigMap[fieldName] = mergeFieldConfigs(fieldConfigCandidatesMap[fieldName], typeMergingOptions);\n    });\n    return fieldConfigMap;\n}\nfunction mergeFieldConfigs(candidates, typeMergingOptions) {\n    var _a;\n    var fieldConfigMerger = (_a = typeMergingOptions === null || typeMergingOptions === void 0 ? void 0 : typeMergingOptions.fieldConfigMerger) !== null && _a !== void 0 ? _a : defaultFieldConfigMerger;\n    return fieldConfigMerger(candidates);\n}\nfunction defaultFieldConfigMerger(candidates) {\n    return candidates[candidates.length - 1].fieldConfig;\n}\nfunction inputFieldConfigMapFromTypeCandidates(candidates, typeMergingOptions) {\n    var inputFieldConfigCandidatesMap = Object.create(null);\n    candidates.forEach(function (candidate) {\n        var inputFieldMap = candidate.type.getFields();\n        Object.keys(inputFieldMap).forEach(function (fieldName) {\n            var inputFieldConfigCandidate = {\n                inputFieldConfig: inputFieldToFieldConfig(inputFieldMap[fieldName]),\n                fieldName: fieldName,\n                type: candidate.type,\n                subschema: candidate.subschema,\n                transformedSubschema: candidate.transformedSubschema,\n            };\n            if (fieldName in inputFieldConfigCandidatesMap) {\n                inputFieldConfigCandidatesMap[fieldName].push(inputFieldConfigCandidate);\n            }\n            else {\n                inputFieldConfigCandidatesMap[fieldName] = [inputFieldConfigCandidate];\n            }\n        });\n    });\n    var inputFieldConfigMap = Object.create(null);\n    Object.keys(inputFieldConfigCandidatesMap).forEach(function (fieldName) {\n        inputFieldConfigMap[fieldName] = mergeInputFieldConfigs(inputFieldConfigCandidatesMap[fieldName], typeMergingOptions);\n    });\n    return inputFieldConfigMap;\n}\nfunction mergeInputFieldConfigs(candidates, typeMergingOptions) {\n    var _a;\n    var inputFieldConfigMerger = (_a = typeMergingOptions === null || typeMergingOptions === void 0 ? void 0 : typeMergingOptions.inputFieldConfigMerger) !== null && _a !== void 0 ? _a : defaultInputFieldConfigMerger;\n    return inputFieldConfigMerger(candidates);\n}\nfunction defaultInputFieldConfigMerger(candidates) {\n    return candidates[candidates.length - 1].inputFieldConfig;\n}\nfunction mergeScalarTypeDefinitionNodes(targetNode, sourceNode) {\n    var _a, _b, _c;\n    return __assign(__assign({}, targetNode), { description: (_a = sourceNode.description) !== null && _a !== void 0 ? _a : targetNode.description, directives: ((_b = targetNode.directives) !== null && _b !== void 0 ? _b : []).concat((_c = sourceNode.directives) !== null && _c !== void 0 ? _c : []) });\n}\n//# sourceMappingURL=mergeCandidates.js.map","import { getNamedType, isNamedType, isSpecifiedScalarType, } from 'graphql';\nimport { wrapSchema } from '@graphql-tools/wrap';\nimport { rewireTypes } from '@graphql-tools/utils';\nimport { buildDocumentFromTypeDefinitions } from '@graphql-tools/schema';\nimport { extractTypeDefinitions, extractTypeExtensionDefinitions, extractDirectiveDefinitions, extractSchemaDefinition, extractSchemaExtensions, } from './definitions';\nimport typeFromAST from './typeFromAST';\nimport { mergeCandidates } from './mergeCandidates';\nexport function buildTypeCandidates(_a) {\n    var subschemas = _a.subschemas, originalSubschemaMap = _a.originalSubschemaMap, types = _a.types, typeDefs = _a.typeDefs, parseOptions = _a.parseOptions, extensions = _a.extensions, directiveMap = _a.directiveMap, schemaDefs = _a.schemaDefs, operationTypeNames = _a.operationTypeNames, mergeDirectives = _a.mergeDirectives;\n    var typeCandidates = Object.create(null);\n    var schemaDef;\n    var schemaExtensions = [];\n    var document;\n    if ((typeDefs && !Array.isArray(typeDefs)) || (Array.isArray(typeDefs) && typeDefs.length)) {\n        document = buildDocumentFromTypeDefinitions(typeDefs, parseOptions);\n        schemaDef = extractSchemaDefinition(document);\n        schemaExtensions = schemaExtensions.concat(extractSchemaExtensions(document));\n    }\n    schemaDefs.schemaDef = schemaDef;\n    schemaDefs.schemaExtensions = schemaExtensions;\n    setOperationTypeNames(schemaDefs, operationTypeNames);\n    subschemas.forEach(function (subschema) {\n        var schema = wrapSchema(subschema);\n        var operationTypes = {\n            query: schema.getQueryType(),\n            mutation: schema.getMutationType(),\n            subscription: schema.getSubscriptionType(),\n        };\n        Object.keys(operationTypes).forEach(function (operationType) {\n            if (operationTypes[operationType] != null) {\n                addTypeCandidate(typeCandidates, operationTypeNames[operationType], {\n                    type: operationTypes[operationType],\n                    subschema: originalSubschemaMap.get(subschema),\n                    transformedSubschema: subschema,\n                });\n            }\n        });\n        if (mergeDirectives) {\n            schema.getDirectives().forEach(function (directive) {\n                directiveMap[directive.name] = directive;\n            });\n        }\n        var originalTypeMap = schema.getTypeMap();\n        Object.keys(originalTypeMap).forEach(function (typeName) {\n            var type = originalTypeMap[typeName];\n            if (isNamedType(type) &&\n                getNamedType(type).name.slice(0, 2) !== '__' &&\n                type !== operationTypes.query &&\n                type !== operationTypes.mutation &&\n                type !== operationTypes.subscription) {\n                addTypeCandidate(typeCandidates, type.name, {\n                    type: type,\n                    subschema: originalSubschemaMap.get(subschema),\n                    transformedSubschema: subschema,\n                });\n            }\n        });\n    });\n    if (document !== undefined) {\n        var typesDocument = extractTypeDefinitions(document);\n        typesDocument.definitions.forEach(function (def) {\n            var type = typeFromAST(def);\n            if (type != null) {\n                addTypeCandidate(typeCandidates, type.name, { type: type });\n            }\n        });\n        var directivesDocument = extractDirectiveDefinitions(document);\n        directivesDocument.definitions.forEach(function (def) {\n            var directive = typeFromAST(def);\n            directiveMap[directive.name] = directive;\n        });\n        var extensionsDocument = extractTypeExtensionDefinitions(document);\n        if (extensionsDocument.definitions.length > 0) {\n            extensions.push(extensionsDocument);\n        }\n    }\n    types.forEach(function (type) { return addTypeCandidate(typeCandidates, type.name, { type: type }); });\n    return typeCandidates;\n}\nfunction setOperationTypeNames(_a, operationTypeNames) {\n    var schemaDef = _a.schemaDef, schemaExtensions = _a.schemaExtensions;\n    var allNodes = schemaExtensions.slice();\n    if (schemaDef != null) {\n        allNodes.unshift(schemaDef);\n    }\n    allNodes.forEach(function (node) {\n        if (node.operationTypes != null) {\n            node.operationTypes.forEach(function (operationType) {\n                operationTypeNames[operationType.operation] = operationType.type.name.value;\n            });\n        }\n    });\n}\nfunction addTypeCandidate(typeCandidates, name, typeCandidate) {\n    if (!(name in typeCandidates)) {\n        typeCandidates[name] = [];\n    }\n    typeCandidates[name].push(typeCandidate);\n}\nexport function buildTypes(_a) {\n    var typeCandidates = _a.typeCandidates, directives = _a.directives, stitchingInfo = _a.stitchingInfo, operationTypeNames = _a.operationTypeNames, onTypeConflict = _a.onTypeConflict, mergeTypes = _a.mergeTypes, typeMergingOptions = _a.typeMergingOptions;\n    var typeMap = Object.create(null);\n    Object.keys(typeCandidates).forEach(function (typeName) {\n        if (typeName === operationTypeNames.query ||\n            typeName === operationTypeNames.mutation ||\n            typeName === operationTypeNames.subscription ||\n            (mergeTypes === true && !typeCandidates[typeName].some(function (candidate) { return isSpecifiedScalarType(candidate.type); })) ||\n            (typeof mergeTypes === 'function' && mergeTypes(typeCandidates[typeName], typeName)) ||\n            (Array.isArray(mergeTypes) && mergeTypes.includes(typeName)) ||\n            (stitchingInfo != null && typeName in stitchingInfo.mergedTypes)) {\n            typeMap[typeName] = mergeCandidates(typeName, typeCandidates[typeName], typeMergingOptions);\n        }\n        else {\n            var candidateSelector = onTypeConflict != null\n                ? onTypeConflictToCandidateSelector(onTypeConflict)\n                : function (cands) { return cands[cands.length - 1]; };\n            typeMap[typeName] = candidateSelector(typeCandidates[typeName]).type;\n        }\n    });\n    return rewireTypes(typeMap, directives);\n}\nfunction onTypeConflictToCandidateSelector(onTypeConflict) {\n    return function (cands) {\n        return cands.reduce(function (prev, next) {\n            var type = onTypeConflict(prev.type, next.type, {\n                left: {\n                    subschema: prev.subschema,\n                    transformedSubschema: prev.transformedSubschema,\n                },\n                right: {\n                    subschema: prev.subschema,\n                    transformedSubschema: prev.transformedSubschema,\n                },\n            });\n            if (prev.type === type) {\n                return prev;\n            }\n            else if (next.type === type) {\n                return next;\n            }\n            return {\n                schemaName: 'unknown',\n                type: type,\n            };\n        });\n    };\n}\n//# sourceMappingURL=typeCandidates.js.map","import { getNamedType, GraphQLList } from 'graphql';\nimport { delegateToSchema } from '@graphql-tools/delegate';\nimport { batchDelegateToSchema } from '@graphql-tools/batch-delegate';\nexport function createMergedTypeResolver(mergedTypeResolverOptions) {\n    var fieldName = mergedTypeResolverOptions.fieldName, argsFromKeys = mergedTypeResolverOptions.argsFromKeys, valuesFromResults = mergedTypeResolverOptions.valuesFromResults, args = mergedTypeResolverOptions.args;\n    if (argsFromKeys != null) {\n        return function (originalResult, context, info, subschema, selectionSet, key) {\n            var _a;\n            return batchDelegateToSchema({\n                schema: subschema,\n                operation: 'query',\n                fieldName: fieldName,\n                returnType: new GraphQLList(getNamedType((_a = info.schema.getType(originalResult.__typename)) !== null && _a !== void 0 ? _a : info.returnType)),\n                key: key,\n                argsFromKeys: argsFromKeys,\n                valuesFromResults: valuesFromResults,\n                selectionSet: selectionSet,\n                context: context,\n                info: info,\n                skipTypeMerging: true,\n            });\n        };\n    }\n    if (args != null) {\n        return function (originalResult, context, info, subschema, selectionSet) {\n            var _a;\n            return delegateToSchema({\n                schema: subschema,\n                operation: 'query',\n                fieldName: fieldName,\n                returnType: getNamedType((_a = info.schema.getType(originalResult.__typename)) !== null && _a !== void 0 ? _a : info.returnType),\n                args: args(originalResult),\n                selectionSet: selectionSet,\n                context: context,\n                info: info,\n                skipTypeMerging: true,\n            });\n        };\n    }\n    return undefined;\n}\n//# sourceMappingURL=createMergedTypeResolver.js.map","import { __assign, __read } from \"tslib\";\nimport { GraphQLSchema, Kind, isObjectType, isScalarType, getNamedType, print, isInterfaceType, isLeafType, } from 'graphql';\nimport { parseSelectionSet } from '@graphql-tools/utils';\nimport { createMergedTypeResolver } from './createMergedTypeResolver';\nexport function createStitchingInfo(subschemaMap, typeCandidates, mergeTypes) {\n    var mergedTypes = createMergedTypes(typeCandidates, mergeTypes);\n    var selectionSetsByField = Object.create(null);\n    Object.entries(mergedTypes).forEach(function (_a) {\n        var _b = __read(_a, 2), typeName = _b[0], mergedTypeInfo = _b[1];\n        if (mergedTypeInfo.selectionSets == null && mergedTypeInfo.fieldSelectionSets == null) {\n            return;\n        }\n        selectionSetsByField[typeName] = Object.create(null);\n        mergedTypeInfo.selectionSets.forEach(function (selectionSet, subschemaConfig) {\n            var schema = subschemaConfig.schema;\n            var type = schema.getType(typeName);\n            var fields = type.getFields();\n            Object.keys(fields).forEach(function (fieldName) {\n                var field = fields[fieldName];\n                var fieldType = getNamedType(field.type);\n                if (selectionSet && isLeafType(fieldType) && selectionSetContainsTopLevelField(selectionSet, fieldName)) {\n                    return;\n                }\n                if (selectionSetsByField[typeName][fieldName] == null) {\n                    selectionSetsByField[typeName][fieldName] = {\n                        kind: Kind.SELECTION_SET,\n                        selections: [parseSelectionSet('{ __typename }').selections[0]],\n                    };\n                }\n                selectionSetsByField[typeName][fieldName].selections = selectionSetsByField[typeName][fieldName].selections.concat(selectionSet.selections);\n            });\n        });\n        mergedTypeInfo.fieldSelectionSets.forEach(function (selectionSetFieldMap) {\n            Object.keys(selectionSetFieldMap).forEach(function (fieldName) {\n                if (selectionSetsByField[typeName][fieldName] == null) {\n                    selectionSetsByField[typeName][fieldName] = {\n                        kind: Kind.SELECTION_SET,\n                        selections: [parseSelectionSet('{ __typename }').selections[0]],\n                    };\n                }\n                selectionSetsByField[typeName][fieldName].selections = selectionSetsByField[typeName][fieldName].selections.concat(selectionSetFieldMap[fieldName].selections);\n            });\n        });\n    });\n    return {\n        subschemaMap: subschemaMap,\n        selectionSetsByField: selectionSetsByField,\n        dynamicSelectionSetsByField: undefined,\n        mergedTypes: mergedTypes,\n    };\n}\nfunction createMergedTypes(typeCandidates, mergeTypes) {\n    var mergedTypes = Object.create(null);\n    Object.keys(typeCandidates).forEach(function (typeName) {\n        if (typeCandidates[typeName].length > 1 &&\n            (isObjectType(typeCandidates[typeName][0].type) || isInterfaceType(typeCandidates[typeName][0].type))) {\n            var typeCandidatesWithMergedTypeConfig = typeCandidates[typeName].filter(function (typeCandidate) {\n                return typeCandidate.transformedSubschema != null &&\n                    typeCandidate.transformedSubschema.merge != null &&\n                    typeName in typeCandidate.transformedSubschema.merge;\n            });\n            if (mergeTypes === true ||\n                (typeof mergeTypes === 'function' && mergeTypes(typeCandidates[typeName], typeName)) ||\n                (Array.isArray(mergeTypes) && mergeTypes.includes(typeName)) ||\n                typeCandidatesWithMergedTypeConfig.length) {\n                var targetSubschemas_1 = [];\n                var typeMaps_1 = new Map();\n                var supportedBySubschemas_1 = Object.create({});\n                var selectionSets_1 = new Map();\n                var fieldSelectionSets_1 = new Map();\n                var resolvers_1 = new Map();\n                typeCandidates[typeName].forEach(function (typeCandidate) {\n                    var _a, _b;\n                    var subschema = typeCandidate.transformedSubschema;\n                    if (subschema == null) {\n                        return;\n                    }\n                    typeMaps_1.set(subschema, subschema.transformedSchema.getTypeMap());\n                    var mergedTypeConfig = (_a = subschema === null || subschema === void 0 ? void 0 : subschema.merge) === null || _a === void 0 ? void 0 : _a[typeName];\n                    if (mergedTypeConfig == null) {\n                        return;\n                    }\n                    if (mergedTypeConfig.selectionSet) {\n                        var selectionSet_1 = parseSelectionSet(mergedTypeConfig.selectionSet);\n                        selectionSets_1.set(subschema, selectionSet_1);\n                    }\n                    if (mergedTypeConfig.fields) {\n                        var parsedFieldSelectionSets_1 = Object.create(null);\n                        Object.keys(mergedTypeConfig.fields).forEach(function (fieldName) {\n                            if (mergedTypeConfig.fields[fieldName].selectionSet) {\n                                var rawFieldSelectionSet = mergedTypeConfig.fields[fieldName].selectionSet;\n                                parsedFieldSelectionSets_1[fieldName] = parseSelectionSet(rawFieldSelectionSet);\n                            }\n                        });\n                        fieldSelectionSets_1.set(subschema, parsedFieldSelectionSets_1);\n                    }\n                    if (mergedTypeConfig.computedFields) {\n                        var parsedFieldSelectionSets_2 = Object.create(null);\n                        Object.keys(mergedTypeConfig.computedFields).forEach(function (fieldName) {\n                            if (mergedTypeConfig.computedFields[fieldName].selectionSet) {\n                                var rawFieldSelectionSet = mergedTypeConfig.computedFields[fieldName].selectionSet;\n                                parsedFieldSelectionSets_2[fieldName] = parseSelectionSet(rawFieldSelectionSet);\n                            }\n                        });\n                        fieldSelectionSets_1.set(subschema, parsedFieldSelectionSets_2);\n                    }\n                    var resolver = (_b = mergedTypeConfig.resolve) !== null && _b !== void 0 ? _b : createMergedTypeResolver(mergedTypeConfig);\n                    if (resolver == null) {\n                        return;\n                    }\n                    var keyFn = mergedTypeConfig.key;\n                    resolvers_1.set(subschema, keyFn\n                        ? function (originalResult, context, info, subschema, selectionSet) {\n                            var key = keyFn(originalResult);\n                            return resolver(originalResult, context, info, subschema, selectionSet, key);\n                        }\n                        : resolver);\n                    targetSubschemas_1.push(subschema);\n                    var type = subschema.transformedSchema.getType(typeName);\n                    var fieldMap = type.getFields();\n                    var selectionSet = selectionSets_1.get(subschema);\n                    Object.keys(fieldMap).forEach(function (fieldName) {\n                        var field = fieldMap[fieldName];\n                        var fieldType = getNamedType(field.type);\n                        if (selectionSet && isLeafType(fieldType) && selectionSetContainsTopLevelField(selectionSet, fieldName)) {\n                            return;\n                        }\n                        if (!(fieldName in supportedBySubschemas_1)) {\n                            supportedBySubschemas_1[fieldName] = [];\n                        }\n                        supportedBySubschemas_1[fieldName].push(subschema);\n                    });\n                });\n                var sourceSubschemas = typeCandidates[typeName]\n                    .filter(function (typeCandidate) { return typeCandidate.transformedSubschema != null; })\n                    .map(function (typeCandidate) { return typeCandidate.transformedSubschema; });\n                var targetSubschemasBySubschema_1 = new Map();\n                sourceSubschemas.forEach(function (subschema) {\n                    var filteredSubschemas = targetSubschemas_1.filter(function (s) { return s !== subschema; });\n                    if (filteredSubschemas.length) {\n                        targetSubschemasBySubschema_1.set(subschema, filteredSubschemas);\n                    }\n                });\n                mergedTypes[typeName] = {\n                    typeName: typeName,\n                    targetSubschemas: targetSubschemasBySubschema_1,\n                    typeMaps: typeMaps_1,\n                    selectionSets: selectionSets_1,\n                    fieldSelectionSets: fieldSelectionSets_1,\n                    uniqueFields: Object.create({}),\n                    nonUniqueFields: Object.create({}),\n                    resolvers: resolvers_1,\n                };\n                Object.keys(supportedBySubschemas_1).forEach(function (fieldName) {\n                    if (supportedBySubschemas_1[fieldName].length === 1) {\n                        mergedTypes[typeName].uniqueFields[fieldName] = supportedBySubschemas_1[fieldName][0];\n                    }\n                    else {\n                        mergedTypes[typeName].nonUniqueFields[fieldName] = supportedBySubschemas_1[fieldName];\n                    }\n                });\n            }\n        }\n    });\n    return mergedTypes;\n}\nexport function completeStitchingInfo(stitchingInfo, resolvers) {\n    var selectionSetsByField = stitchingInfo.selectionSetsByField;\n    var dynamicSelectionSetsByField = Object.create(null);\n    Object.keys(resolvers).forEach(function (typeName) {\n        var type = resolvers[typeName];\n        if (isScalarType(type)) {\n            return;\n        }\n        Object.keys(type).forEach(function (fieldName) {\n            var field = type[fieldName];\n            if (field.selectionSet) {\n                if (typeof field.selectionSet === 'function') {\n                    if (!(typeName in dynamicSelectionSetsByField)) {\n                        dynamicSelectionSetsByField[typeName] = Object.create(null);\n                    }\n                    if (!(fieldName in dynamicSelectionSetsByField[typeName])) {\n                        dynamicSelectionSetsByField[typeName][fieldName] = [];\n                    }\n                    dynamicSelectionSetsByField[typeName][fieldName].push(field.selectionSet);\n                }\n                else {\n                    var selectionSet = parseSelectionSet(field.selectionSet);\n                    if (!(typeName in selectionSetsByField)) {\n                        selectionSetsByField[typeName] = Object.create(null);\n                    }\n                    if (!(fieldName in selectionSetsByField[typeName])) {\n                        selectionSetsByField[typeName][fieldName] = {\n                            kind: Kind.SELECTION_SET,\n                            selections: [],\n                        };\n                    }\n                    selectionSetsByField[typeName][fieldName].selections = selectionSetsByField[typeName][fieldName].selections.concat(selectionSet.selections);\n                }\n            }\n        });\n    });\n    Object.keys(selectionSetsByField).forEach(function (typeName) {\n        var typeSelectionSets = selectionSetsByField[typeName];\n        Object.keys(typeSelectionSets).forEach(function (fieldName) {\n            var consolidatedSelections = new Map();\n            var selectionSet = typeSelectionSets[fieldName];\n            selectionSet.selections.forEach(function (selection) {\n                consolidatedSelections.set(print(selection), selection);\n            });\n            selectionSet.selections = Array.from(consolidatedSelections.values());\n        });\n    });\n    stitchingInfo.selectionSetsByField = selectionSetsByField;\n    stitchingInfo.dynamicSelectionSetsByField = dynamicSelectionSetsByField;\n    return stitchingInfo;\n}\nexport function addStitchingInfo(stitchedSchema, stitchingInfo) {\n    return new GraphQLSchema(__assign(__assign({}, stitchedSchema.toConfig()), { extensions: __assign(__assign({}, stitchedSchema.extensions), { stitchingInfo: stitchingInfo }) }));\n}\nexport function selectionSetContainsTopLevelField(selectionSet, fieldName) {\n    return selectionSet.selections.some(function (selection) { return selection.kind === Kind.FIELD && selection.name.value === fieldName; });\n}\n//# sourceMappingURL=stitchingInfo.js.map","import { __assign } from \"tslib\";\nimport { isObjectType, isInterfaceType } from 'graphql';\nimport { getImplementingTypes, pruneSchema, filterSchema } from '@graphql-tools/utils';\nimport { TransformCompositeFields } from '@graphql-tools/wrap';\nexport function isolateComputedFields(subschemaConfig) {\n    var baseSchemaTypes = {};\n    var isolatedSchemaTypes = {};\n    if (subschemaConfig.merge == null) {\n        return [subschemaConfig];\n    }\n    Object.keys(subschemaConfig.merge).forEach(function (typeName) {\n        var mergedTypeConfig = subschemaConfig.merge[typeName];\n        baseSchemaTypes[typeName] = mergedTypeConfig;\n        if (mergedTypeConfig.computedFields) {\n            var baseFields_1 = {};\n            var isolatedFields_1 = {};\n            Object.keys(mergedTypeConfig.computedFields).forEach(function (fieldName) {\n                var mergedFieldConfig = mergedTypeConfig.computedFields[fieldName];\n                if (mergedFieldConfig.selectionSet) {\n                    isolatedFields_1[fieldName] = mergedFieldConfig;\n                }\n                else {\n                    baseFields_1[fieldName] = mergedFieldConfig;\n                }\n            });\n            var isolatedFieldCount = Object.keys(isolatedFields_1).length;\n            var objectType = subschemaConfig.schema.getType(typeName);\n            if (isolatedFieldCount && isolatedFieldCount !== Object.keys(objectType.getFields()).length) {\n                baseSchemaTypes[typeName] = __assign(__assign({}, mergedTypeConfig), { fields: Object.keys(baseFields_1).length ? baseFields_1 : undefined });\n                isolatedSchemaTypes[typeName] = __assign(__assign({}, mergedTypeConfig), { fields: isolatedFields_1 });\n            }\n        }\n    });\n    if (Object.keys(isolatedSchemaTypes).length) {\n        return [\n            filterBaseSubschema(__assign(__assign({}, subschemaConfig), { merge: baseSchemaTypes }), isolatedSchemaTypes),\n            filterIsolatedSubschema(__assign(__assign({}, subschemaConfig), { merge: isolatedSchemaTypes })),\n        ];\n    }\n    return [subschemaConfig];\n}\nfunction filterBaseSubschema(subschemaConfig, isolatedSchemaTypes) {\n    var _a;\n    var typesForInterface = {};\n    var filteredSchema = pruneSchema(filterSchema({\n        schema: subschemaConfig.schema,\n        objectFieldFilter: function (typeName, fieldName) { var _a; return !((_a = isolatedSchemaTypes[typeName]) === null || _a === void 0 ? void 0 : _a.fields[fieldName]); },\n        interfaceFieldFilter: function (typeName, fieldName) {\n            if (!typesForInterface[typeName]) {\n                typesForInterface[typeName] = getImplementingTypes(typeName, subschemaConfig.schema);\n            }\n            return !typesForInterface[typeName].some(function (implementingTypeName) { var _a; return (_a = isolatedSchemaTypes[implementingTypeName]) === null || _a === void 0 ? void 0 : _a.fields[fieldName]; });\n        },\n    }));\n    var filteredFields = {};\n    Object.keys(filteredSchema.getTypeMap()).forEach(function (typeName) {\n        var type = filteredSchema.getType(typeName);\n        if (isObjectType(type) || isInterfaceType(type)) {\n            filteredFields[typeName] = {};\n            var fieldMap = type.getFields();\n            Object.keys(fieldMap).forEach(function (fieldName) {\n                filteredFields[typeName][fieldName] = true;\n            });\n        }\n    });\n    var filteredSubschema = __assign(__assign({}, subschemaConfig), { merge: subschemaConfig.merge\n            ? __assign({}, subschemaConfig.merge) : undefined, transforms: ((_a = subschemaConfig.transforms) !== null && _a !== void 0 ? _a : []).concat([\n            new TransformCompositeFields(function (typeName, fieldName) { var _a; return (((_a = filteredFields[typeName]) === null || _a === void 0 ? void 0 : _a[fieldName]) ? undefined : null); }, function (typeName, fieldName) { var _a; return (((_a = filteredFields[typeName]) === null || _a === void 0 ? void 0 : _a[fieldName]) ? undefined : null); }),\n        ]) });\n    var remainingTypes = filteredSchema.getTypeMap();\n    Object.keys(filteredSubschema.merge).forEach(function (mergeType) {\n        if (!remainingTypes[mergeType]) {\n            delete filteredSubschema.merge[mergeType];\n        }\n    });\n    if (!Object.keys(filteredSubschema.merge).length) {\n        delete filteredSubschema.merge;\n    }\n    return filteredSubschema;\n}\nfunction filterIsolatedSubschema(subschemaConfig) {\n    var _a;\n    var rootFields = {};\n    Object.keys(subschemaConfig.merge).forEach(function (typeName) {\n        rootFields[subschemaConfig.merge[typeName].fieldName] = true;\n    });\n    var interfaceFields = {};\n    Object.keys(subschemaConfig.merge).forEach(function (typeName) {\n        subschemaConfig.schema.getType(typeName).getInterfaces().forEach(function (int) {\n            Object.keys(subschemaConfig.schema.getType(int.name).getFields()).forEach(function (intFieldName) {\n                if (subschemaConfig.merge[typeName].fields[intFieldName]) {\n                    interfaceFields[int.name] = interfaceFields[int.name] || {};\n                    interfaceFields[int.name][intFieldName] = true;\n                }\n            });\n        });\n    });\n    var filteredSchema = pruneSchema(filterSchema({\n        schema: subschemaConfig.schema,\n        rootFieldFilter: function (operation, fieldName) { return operation === 'Query' && rootFields[fieldName] != null; },\n        objectFieldFilter: function (typeName, fieldName) { var _a; return ((_a = subschemaConfig.merge[typeName]) === null || _a === void 0 ? void 0 : _a.fields[fieldName]) != null; },\n        interfaceFieldFilter: function (typeName, fieldName) { var _a; return ((_a = interfaceFields[typeName]) === null || _a === void 0 ? void 0 : _a[fieldName]) != null; },\n    }));\n    var filteredFields = {};\n    Object.keys(filteredSchema.getTypeMap()).forEach(function (typeName) {\n        var type = filteredSchema.getType(typeName);\n        if (isObjectType(type) || isInterfaceType(type)) {\n            filteredFields[typeName] = {};\n            var fieldMap = type.getFields();\n            Object.keys(fieldMap).forEach(function (fieldName) {\n                filteredFields[typeName][fieldName] = true;\n            });\n        }\n    });\n    return __assign(__assign({}, subschemaConfig), { transforms: ((_a = subschemaConfig.transforms) !== null && _a !== void 0 ? _a : []).concat([\n            new TransformCompositeFields(function (typeName, fieldName) { var _a; return (((_a = filteredFields[typeName]) === null || _a === void 0 ? void 0 : _a[fieldName]) ? undefined : null); }, function (typeName, fieldName) { var _a; return (((_a = filteredFields[typeName]) === null || _a === void 0 ? void 0 : _a[fieldName]) ? undefined : null); }),\n        ]) });\n}\n//# sourceMappingURL=isolateComputedFields.js.map","import { getDirectives, MapperKind, mapSchema } from '@graphql-tools/utils';\nimport { cloneSubschemaConfig } from '@graphql-tools/delegate';\nexport function computedDirectiveTransformer(computedDirectiveName) {\n    return function (subschemaConfig) {\n        var _a;\n        var newSubschemaConfig = cloneSubschemaConfig(subschemaConfig);\n        mapSchema(subschemaConfig.schema, (_a = {},\n            _a[MapperKind.OBJECT_FIELD] = function (fieldConfig, fieldName, typeName, schema) {\n                var _a, _b, _c, _d;\n                var mergeTypeConfig = (_a = newSubschemaConfig.merge) === null || _a === void 0 ? void 0 : _a[typeName];\n                if (mergeTypeConfig == null) {\n                    return undefined;\n                }\n                var computed = getDirectives(schema, fieldConfig)[computedDirectiveName];\n                if (computed == null) {\n                    return undefined;\n                }\n                var selectionSet = computed.fields != null ? \"{ \" + computed.fields + \" }\" : computed.selectionSet;\n                if (selectionSet == null) {\n                    return undefined;\n                }\n                mergeTypeConfig.computedFields = (_b = mergeTypeConfig.computedFields) !== null && _b !== void 0 ? _b : {};\n                mergeTypeConfig.computedFields[fieldName] = (_c = mergeTypeConfig.computedFields[fieldName]) !== null && _c !== void 0 ? _c : {};\n                var mergeFieldConfig = mergeTypeConfig.computedFields[fieldName];\n                mergeFieldConfig.selectionSet = (_d = mergeFieldConfig.selectionSet) !== null && _d !== void 0 ? _d : selectionSet;\n                return undefined;\n            },\n            _a));\n        return newSubschemaConfig;\n    };\n}\n//# sourceMappingURL=computedDirectiveTransformer.js.map","import { computedDirectiveTransformer } from './computedDirectiveTransformer';\nexport { computedDirectiveTransformer } from './computedDirectiveTransformer';\nexport var defaultSubschemaConfigTransforms = [computedDirectiveTransformer('computed')];\n//# sourceMappingURL=index.js.map","import { GraphQLSchema, specifiedDirectives, extendSchema, } from 'graphql';\nimport { SchemaDirectiveVisitor, mergeDeep, pruneSchema } from '@graphql-tools/utils';\nimport { addResolversToSchema, addSchemaLevelResolver, addErrorLoggingToSchema, addCatchUndefinedToSchema, assertResolversPresent, attachDirectiveResolvers, extendResolversFromInterfaces, } from '@graphql-tools/schema';\nimport { isSubschemaConfig, Subschema } from '@graphql-tools/delegate';\nimport { buildTypeCandidates, buildTypes } from './typeCandidates';\nimport { createStitchingInfo, completeStitchingInfo, addStitchingInfo } from './stitchingInfo';\nimport { isolateComputedFields } from './isolateComputedFields';\nimport { defaultSubschemaConfigTransforms } from './subschemaConfigTransforms';\nexport function stitchSchemas(_a) {\n    var _b = _a.subschemas, subschemas = _b === void 0 ? [] : _b, _c = _a.types, types = _c === void 0 ? [] : _c, typeDefs = _a.typeDefs, onTypeConflict = _a.onTypeConflict, mergeDirectives = _a.mergeDirectives, _d = _a.mergeTypes, mergeTypes = _d === void 0 ? true : _d, typeMergingOptions = _a.typeMergingOptions, _e = _a.subschemaConfigTransforms, subschemaConfigTransforms = _e === void 0 ? defaultSubschemaConfigTransforms : _e, _f = _a.resolvers, resolvers = _f === void 0 ? {} : _f, schemaDirectives = _a.schemaDirectives, _g = _a.inheritResolversFromInterfaces, inheritResolversFromInterfaces = _g === void 0 ? false : _g, logger = _a.logger, _h = _a.allowUndefinedInResolve, allowUndefinedInResolve = _h === void 0 ? true : _h, _j = _a.resolverValidationOptions, resolverValidationOptions = _j === void 0 ? {} : _j, directiveResolvers = _a.directiveResolvers, _k = _a.schemaTransforms, schemaTransforms = _k === void 0 ? [] : _k, _l = _a.parseOptions, parseOptions = _l === void 0 ? {} : _l, pruningOptions = _a.pruningOptions;\n    if (typeof resolverValidationOptions !== 'object') {\n        throw new Error('Expected `resolverValidationOptions` to be an object');\n    }\n    var transformedSubschemas = [];\n    var subschemaMap = new Map();\n    var originalSubschemaMap = new Map();\n    subschemas.forEach(function (subschemaOrSubschemaArray) {\n        if (Array.isArray(subschemaOrSubschemaArray)) {\n            subschemaOrSubschemaArray.forEach(function (s) {\n                transformedSubschemas = transformedSubschemas.concat(applySubschemaConfigTransforms(subschemaConfigTransforms, s, subschemaMap, originalSubschemaMap));\n            });\n        }\n        else {\n            transformedSubschemas = transformedSubschemas.concat(applySubschemaConfigTransforms(subschemaConfigTransforms, subschemaOrSubschemaArray, subschemaMap, originalSubschemaMap));\n        }\n    });\n    var extensions = [];\n    var directives = [];\n    var directiveMap = specifiedDirectives.reduce(function (acc, directive) {\n        acc[directive.name] = directive;\n        return acc;\n    }, Object.create(null));\n    var schemaDefs = Object.create(null);\n    var operationTypeNames = {\n        query: 'Query',\n        mutation: 'Mutation',\n        subscription: 'Subscription',\n    };\n    var typeCandidates = buildTypeCandidates({\n        subschemas: transformedSubschemas,\n        originalSubschemaMap: originalSubschemaMap,\n        types: types,\n        typeDefs: typeDefs,\n        parseOptions: parseOptions,\n        extensions: extensions,\n        directiveMap: directiveMap,\n        schemaDefs: schemaDefs,\n        operationTypeNames: operationTypeNames,\n        mergeDirectives: mergeDirectives,\n    });\n    Object.keys(directiveMap).forEach(function (directiveName) {\n        directives.push(directiveMap[directiveName]);\n    });\n    var stitchingInfo = createStitchingInfo(subschemaMap, typeCandidates, mergeTypes);\n    var _m = buildTypes({\n        typeCandidates: typeCandidates,\n        directives: directives,\n        stitchingInfo: stitchingInfo,\n        operationTypeNames: operationTypeNames,\n        onTypeConflict: onTypeConflict,\n        mergeTypes: mergeTypes,\n        typeMergingOptions: typeMergingOptions,\n    }), newTypeMap = _m.typeMap, newDirectives = _m.directives;\n    var schema = new GraphQLSchema({\n        query: newTypeMap[operationTypeNames.query],\n        mutation: newTypeMap[operationTypeNames.mutation],\n        subscription: newTypeMap[operationTypeNames.subscription],\n        types: Object.keys(newTypeMap).map(function (key) { return newTypeMap[key]; }),\n        directives: newDirectives,\n        astNode: schemaDefs.schemaDef,\n        extensionASTNodes: schemaDefs.schemaExtensions,\n        extensions: null,\n    });\n    extensions.forEach(function (extension) {\n        schema = extendSchema(schema, extension, {\n            commentDescriptions: true,\n        });\n    });\n    // We allow passing in an array of resolver maps, in which case we merge them\n    var resolverMap = Array.isArray(resolvers) ? resolvers.reduce(mergeDeep, {}) : resolvers;\n    var finalResolvers = inheritResolversFromInterfaces\n        ? extendResolversFromInterfaces(schema, resolverMap)\n        : resolverMap;\n    stitchingInfo = completeStitchingInfo(stitchingInfo, finalResolvers);\n    schema = addResolversToSchema({\n        schema: schema,\n        resolvers: finalResolvers,\n        resolverValidationOptions: resolverValidationOptions,\n        inheritResolversFromInterfaces: false,\n    });\n    assertResolversPresent(schema, resolverValidationOptions);\n    schema = addStitchingInfo(schema, stitchingInfo);\n    if (!allowUndefinedInResolve) {\n        schema = addCatchUndefinedToSchema(schema);\n    }\n    if (logger != null) {\n        schema = addErrorLoggingToSchema(schema, logger);\n    }\n    if (typeof finalResolvers['__schema'] === 'function') {\n        // TODO a bit of a hack now, better rewrite generateSchema to attach it there.\n        // not doing that now, because I'd have to rewrite a lot of tests.\n        schema = addSchemaLevelResolver(schema, finalResolvers['__schema']);\n    }\n    schemaTransforms.forEach(function (schemaTransform) {\n        schema = schemaTransform(schema);\n    });\n    if (directiveResolvers != null) {\n        schema = attachDirectiveResolvers(schema, directiveResolvers);\n    }\n    if (schemaDirectives != null) {\n        SchemaDirectiveVisitor.visitSchemaDirectives(schema, schemaDirectives);\n    }\n    return pruningOptions ? pruneSchema(schema, pruningOptions) : schema;\n}\nfunction applySubschemaConfigTransforms(subschemaConfigTransforms, subschemaOrSubschemaConfig, subschemaMap, originalSubschemaMap) {\n    var subschemaConfig = isSubschemaConfig(subschemaOrSubschemaConfig)\n        ? subschemaOrSubschemaConfig\n        : { schema: subschemaOrSubschemaConfig };\n    var newSubschemaConfig = subschemaConfigTransforms.reduce(function (acc, subschemaConfigTransform) {\n        return subschemaConfigTransform(acc);\n    }, subschemaConfig);\n    var transformedSubschemas = isolateComputedFields(newSubschemaConfig).map(function (subschemaConfig) { return new Subschema(subschemaConfig); });\n    var baseSubschema = transformedSubschemas[0];\n    subschemaMap.set(subschemaOrSubschemaConfig, baseSubschema);\n    transformedSubschemas.forEach(function (subschema) { return originalSubschemaMap.set(subschema, subschemaOrSubschemaConfig); });\n    return transformedSubschemas;\n}\nexport function isDocumentNode(object) {\n    return object.kind !== undefined;\n}\n//# sourceMappingURL=stitchSchemas.js.map","import { __assign } from \"tslib\";\nimport { parseSelectionSet } from '@graphql-tools/utils';\nimport { Kind } from 'graphql';\nexport var forwardArgsToSelectionSet = function (selectionSet, mapping) {\n    var selectionSetDef = parseSelectionSet(selectionSet);\n    return function (field) {\n        var selections = selectionSetDef.selections.map(function (selectionNode) {\n            if (selectionNode.kind === Kind.FIELD) {\n                if (!mapping) {\n                    return __assign(__assign({}, selectionNode), { arguments: field.arguments.slice() });\n                }\n                else if (selectionNode.name.value in mapping) {\n                    var selectionArgs_1 = mapping[selectionNode.name.value];\n                    return __assign(__assign({}, selectionNode), { arguments: field.arguments.filter(function (arg) { return selectionArgs_1.includes(arg.name.value); }) });\n                }\n            }\n            return selectionNode;\n        });\n        return __assign(__assign({}, selectionSetDef), { selections: selections });\n    };\n};\n//# sourceMappingURL=selectionSetArgs.js.map"],"names":[],"mappings":"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"}